<?php

namespace AcmeCo\Services;

use Roots\Bud\Services\ServiceProvider;
use Roots\Bud\Container\Contracts\ContainerInterface;

/**
 * Register client assets.
 *
 * Enqueues
 */
class Register extends ServiceProvider
{
    /** @var ContainerInterface */
    public $bud;

    /**
      * Boot plugin service.
      *
      * @return void
      */
    public function boot(): void
    {
        /** Vendored scripts. */
        if ($this->bud['manifest']->has("vendor.js")) {
            wp_register_script(
                $this->bud['manifest']->asset("vendor.js")->url(),
                [],
                null
            );
        );

        /**  Editor/admin bundle. */
        $this->registerEntry('editor');

        /** Public bundle. */
        $this->registerEntry('public');
    }

    /**
     * Register entrypoint
     *
     * @return void
     */
    public function registerEntry($asset): void
    {
        /**
         * Inline manifest.
         */
        $runtime = $this->bud['manifest']->has("runtime/{$asset}.js")
            ? $this->bud['manifest']->asset("runtime/{$asset}.js")->url()
            : null;

        /**
         * Inline manifest dependencies.
         *
         * @note If both `inlineManifest` and `dependencyManifest` are in use, the runtime manifest
         *       will have the dependencies asset manifest attached to it rather than the entrypoint.
         */
        $runtimeDependencies = $this->bud['manifest']->has("runtime/{$asset}.json")
            ? $this->bud['manifest']->asset("runtime/{$asset}.json")->json()->dependencies
            : [];
        $scriptDependencies = $runtime ? ["{$asset}/script/runtime"] : [];

        /**
         * The entrypoint script.
         */
        $script = $this->bud['manifest']->has("{$asset}.js")
            ? $this->bud['manifest']->asset("{$asset}.js")->url()
            : null;

        /**
         * The entrypoint stylesheet.
         */
        $style = $this->bud['manifest']->has("{$asset}.css")
            ? $this->bud['manifest']->asset("{$asset}.css")->url()
            : null;

        /**
         * Register entrypoint runtime.
         */
        if ($runtime) {
            wp_register_script(
                "{$asset}/script/runtime",
                $runtime,
                $runtimeDependencies,
                null
            );
        }

        /**
         * Register entrypoint script.
         */
        if ($script) {
            wp_register_script(
                "{$asset}/script",
                $script,
                $scriptDependencies,
                null
            );
        }

        /**
         * Register entrypoint stylesheet.
         */
        if ($style) {
            wp_register_style(
                "{$asset}/style",
                $style,
                [],
                null
            );
        }
    }

    /**
     * On admin_init.
     *
     * @return void
     */
    public function adminInit(): void
    {
        wp_enqueue_script('editor/script/runtime');
        wp_enqueue_script('editor/script');
        wp_enqueue_style('editor/style');
    }

    /**
     * On wp_enqueue_scripts.
     *
     * @return void
     */
    public function enqueueScripts(): void
    {
        wp_enqueue_script('public/script/runtime');
        wp_enqueue_script('public/script');
        wp_enqueue_style('public/style');
    }
}
